
-- 30 rows 0.114 sec

SELECT u.name as city
FROM geo.world x, x.mondial.country y, y.province z, 
(CASE  WHEN is_array(z.city) THEN z.city
ELSE [z.city] END) AS u
WHERE  y.name='Peru'
ORDER BY city;

-- 238 rows 0.126 sec

SELECT y.name as country, y.population, array_count(r) as num_religions
FROM geo.world x, x.mondial.country y
LET r = (CASE WHEN y.religions IS MISSING THEN []
WHEN is_array(y.religions)
THEN y.religions
ELSE [y.religions]
END) 
Order by country;

-- 37 rows 0.3 sec
SELECT r.`#text` as religion, COUNT(y.name) as num_countries
FROM geo.world x, x.mondial.country y,
(CASE WHEN y.religions IS missing THEN []
WHEN is_array(y.religions) 
THEN y.religions
ELSE [y.religions] END) AS r
GROUP BY r.`#text`
ORDER BY num_countries DESC;

-- 262 rows 0.152 sec
SELECT e.`#text` as ethnic_group, COUNT(y.name) as num_countries, SUM(total) as total_population
FROM geo.world x, x.mondial.country y, 
(CASE WHEN y.ethnicgroups IS missing THEN []
WHEN is_array(y.ethnicgroups)
THEN y.ethnicgroups
ELSE [y.ethnicgroups] END) AS e
LET total = float(e.`-percentage`) * float(y.population) / 100
GROUP BY e.`#text`;

-- 272 rows 1.053 sec
SELECT m.name as mountain, m.height, y.`-car_code` as country_code, y.name as country_name
FROM geo.world x, x.mondial.country y, x.mondial.mountain m, split(m.`-country`, " ") AS spy
WHERE y.`-car_code` = spy
ORDER BY float(m.height) DESC;

-- 6
-- 238 rows 2.595 sec
SELECT y.`-car_code` as country_code, y.name as country_name, mountain as mountains
FROM geo.world x, x.mondial.country y
LET mountain = (SELECT m.name as mountain, m.height
FROM x.mondial.mountain m, split(m.`-country`, " ") AS spy
WHERE y.`-car_code` = spy)
ORDER BY ARRAY_COUNT(mountain) DESC;

-- 74 rows 0.526 sec
SELECT y.`-car_code` as country_code, y.name as country_name, s1 as seas
FROM geo.world x, x.mondial.country y
LET s1 = (SELECT s2.name
FROM x.mondial.sea s2, split(s2.`-country`, " ") AS spy
WHERE y.`-car_code` = spy)
WHERE ARRAY_COUNT(s1) > 1
ORDER BY ARRAY_COUNT(s1) DESC;

-- 45 rows 0.34 sec
SELECT  y.`-car_code` as country_code, y.name as country_name, y.`-area` as area
FROM geo.world x, x.mondial.country y
LET s1 = (SELECT s2.name as sea
FROM x.mondial.sea s2, split(s2.`-country`, " ") AS spy
WHERE y.`-car_code` = spy)
WHERE ARRAY_COUNT(s1) < 1
ORDER BY float(y.`-area`) DESC;

- 9
-- 7 rows 193.407 sec
SELECT DISTINCT c1.y1 as first_country, c2.y2 as second_country
FROM (SELECT y.name as y1, s.name as s1, m.name as m1
FROM geo.world x, x.mondial.country y, x.mondial.mountain m, x.mondial.sea s,
split(s.`-country`, " ") AS sps, split(m.`-country`, " ") AS spm
WHERE y.`-car_code` = sps AND y.`-car_code` = spm) AS c1,
(SELECT y.name as y2, s.name as s2, m.name as m2
FROM geo.world x, x.mondial.country y, x.mondial.mountain m, x.mondial.sea s,
split(s.`-country`, " ") AS sps, split(m.`-country`, " ") AS spm
WHERE y.`-car_code` = sps AND y.`-car_code` = spm) AS c2
WHERE c1.s1 = c2.s2 AND
c1.m1 = c2.m2 AND
c1.y1 < c2.y2;

-- 0.683 sec
DROP DATAVERSE geoindex IF EXISTS;
CREATE DATAVERSE geoindex;

USE geoindex;
CREATE TYPE countryType AS OPEN {
    `-car_code`: string,
    `-area`: string,
    population: string
};
CREATE DATASET country(countryType)
   PRIMARY KEY `-car_code`;
CREATE INDEX countryID ON country(`-car_code`) TYPE BTREE;
LOAD DATASET country USING localfs
    (("path"="127.0.0.1:///D:/cse414/hw6data/country.adm"),("format"="adm"));


CREATE TYPE mountainType AS OPEN {
    auto_id: uuid,
    `-id`: string,
    `-country`: string
};

CREATE DATASET mountain(mountainType)
   PRIMARY KEY auto_id AUTOGENERATED;
CREATE INDEX mountainID ON mountain(`-country`) TYPE KEYWORD;
LOAD DATASET mountain USING localfs
    (("path"="127.0.0.1:///D:/cse414/hw6data/mountain.adm"),("format"="adm"));

CREATE TYPE seaType AS OPEN {
    auto_id:uuid,
    `-id`: string,
    `-country`: string
};

CREATE DATASET sea(seaType)
   PRIMARY KEY auto_id AUTOGENERATED;
CREATE INDEX seaID ON sea(`-country`) TYPE KEYWORD;
LOAD DATASET sea USING localfs
    (("path"="127.0.0.1:///D:/cse414/hw6data/sea.adm"),("format"="adm"));


-- 7rows 41.899 sec
USE geoIndex;

SELECT DISTINCT c1.y1 as first_country, c2.y2 as second_country
FROM (SELECT y.name as y1, s.name as s1, m.name as m1
FROM country y, mountain m, sea s,
split(s.`-country`, " ") AS sps, split(m.`-country`, " ") AS spm
WHERE y.`-car_code` = sps AND y.`-car_code` = spm) AS c1,
(SELECT y.name as y2, s.name as s2, m.name as m2
FROM country y, mountain m, sea s,
split(s.`-country`, " ") AS sps, split(m.`-country`, " ") AS spm
WHERE y.`-car_code` = sps AND y.`-car_code` = spm) AS c2
WHERE c1.s1 = c2.s2 AND
c1.m1 = c2.m2 AND
c1.y1 < c2.y2;

-- 7 rows 42.492 sec
WITH X AS
(SELECT DISTINCT c1.y1 as fc, c2.y2 as sc,
c1.m1 as m, c1.s1 as s
FROM (SELECT y.name as y1, s.name as s1, m.name as m1
FROM geo.world x, x.mondial.country y, x.mondial.mountain m, x.mondial.sea s,
split(s.`-country`, " ") AS sps, split(m.`-country`, " ") AS spm
WHERE y.`-car_code` = sps AND y.`-car_code` = spm) AS c1,
(SELECT y.name as y2, s.name as s2, m.name as m2
FROM geo.world x, x.mondial.country y, x.mondial.mountain m, x.mondial.sea s,
split(s.`-country`, " ") AS sps, split(m.`-country`, " ") AS spm
WHERE y.`-car_code` = sps AND y.`-car_code` = spm) AS c2
WHERE c1.s1 = c2.s2 AND
c1.m1 = c2.m2 AND
c1.y1 < c2.y2)
SELECT x1.fc as first_country, x1.sc as second_country, 
       (SELECT DISTINCT X.m FROM X WHERE X.fc=x1.fc AND X.sc=x1.sc) as mountains, (SELECT DISTINCT X.s FROM X WHERE X.fc=x1.fc AND X.sc=x1.sc) as seas
FROM X as x1
GROUP BY x1.fc, x1.sc;


